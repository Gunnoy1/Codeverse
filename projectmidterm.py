# ===================== CONFIGURATION ===================== #
PASSWORD = "1234"
GOODS_FILES = "Goods.txt"
WALLET_FILES = "Wallet.txt"


# ===================== LOAD & SAVE ===================== #
def load_goods(goods_file):
    goods = {}
    try:
        with open(goods_file, 'r', encoding='utf-8') as stocks:
            for line in stocks:
                num, name, price, stock = line.strip().split(',')
                goods[int(num)] = {
                    'name': name,
                    'price': int(price),
                    'stock': int(stock)
                }
    except FileNotFoundError:
        print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {goods_file}")
    return goods


def load_wallet(wallet_file):
    wallet = {}
    try:
        with open(wallet_file, 'r', encoding='utf-8') as fund:
            for line in fund:
                money, num = line.strip().split(',')
                wallet[int(money)] = int(num)
    except FileNotFoundError:
        print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {wallet_file}")
    return wallet


def save_goods(goods, goods_file):
    with open(goods_file, 'w', encoding='utf-8') as stocks:
        for num, item in goods.items():
            stocks.write(f"{num},{item['name']},{item['price']},{item['stock']}\n")


def save_wallet(wallet, wallet_file):
    with open(wallet_file, 'w', encoding='utf-8') as fund:
        for coin, amount in wallet.items():
            fund.write(f"{coin},{amount}\n")


# ===================== PAYMENT ===================== #
def money_received(price):
    valid_money = [1, 2, 5, 10, 20, 50, 100, 200, 500, 1000]
    total = 0
    inserted_money = {}

    while total < price:
        entry = input(
            f"\nüí∞ ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏™‡πà‡πÄ‡∏á‡∏¥‡∏ô (‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {price - total} ‡∏ö‡∏≤‡∏ó)\n"
            f"   ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î 'c' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å: "
        )
        if entry.lower() == 'c':
            print("‚ùå ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")
            return None, None

        try:
            amount = int(entry)
            if amount in valid_money:
                inserted_money[amount] = inserted_money.get(amount, 0) + 1
                total += amount
                print(f"‚ûï ‡πÉ‡∏™‡πà‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°: {amount} ‡∏ö‡∏≤‡∏ó (‡∏£‡∏ß‡∏° {total} ‡∏ö‡∏≤‡∏ó)")
            else:
                print(f"‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç/‡∏ò‡∏ô‡∏ö‡∏±‡∏ï‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: {valid_money}")
        except ValueError:
            print("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")

    return total, inserted_money


# ===================== CHANGE ===================== #
def calculate_change(change, wallet):
    change_back = {}
    for coin in sorted(wallet.keys(), reverse=True):
        count = min(change // coin, wallet.get(coin, 0))
        if count > 0:
            change_back[coin] = count
            change -= coin * count
            wallet[coin] -= count
    return change_back if change == 0 else None


def display_change(change_back):
    coins = [1, 2, 5, 10]  
    notes = [20, 50, 100, 200, 500, 1000] 
    
    coin_change = {k: v for k, v in change_back.items() if k in coins}
    note_change = {k: v for k, v in change_back.items() if k in notes}
    
    if coin_change:
        print("  ü™ô ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç:")
        for coin in sorted(coin_change.keys()):
            print(f"    {coin} ‡∏ö‡∏≤‡∏ó x {coin_change[coin]} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç")
    
    if note_change:
        print("  üíµ ‡∏ò‡∏ô‡∏ö‡∏±‡∏ï‡∏£:")
        for note in sorted(note_change.keys()):
            print(f"    {note} ‡∏ö‡∏≤‡∏ó x {note_change[note]} ‡πÉ‡∏ö")


# ===================== BUY GOODS ===================== #
def buy_goods(goods, wallet):
    while True:
        print("\n" + "=" * 50)
        print("üõí ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏π‡πâ‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
        print("=" * 50)
        for num, item in goods.items():
            print(f"{num:2d}. {item['name']:<20} | ‡∏£‡∏≤‡∏Ñ‡∏≤: {item['price']:>5} ‡∏ö‡∏≤‡∏ó | ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {item['stock']:>3} ‡∏ä‡∏¥‡πâ‡∏ô")
        print("=" * 50)

        choice = input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç (‡∏´‡∏£‡∏∑‡∏≠ 'q' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å): ").strip()

        if choice.lower() == 'q':
            print("‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å...\n")
            break

        try:
            choice = int(choice)
            if choice not in goods:
                print("‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
                continue

            item = goods[choice]
            if item['stock'] <= 0:
                print("‚ùå ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô")
                continue

            print(f"\nüõç ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: {item['name']} ‡∏£‡∏≤‡∏Ñ‡∏≤ {item['price']} ‡∏ö‡∏≤‡∏ó")

            total, inserted_money = money_received(item['price'])
            if total is None:
                continue

            change = total - item['price']
            wallet_backup = wallet.copy()

            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏π‡πâ
            for coin, count in inserted_money.items():
                wallet[coin] = wallet.get(coin, 0) + count

            change_back = calculate_change(change, wallet)

            if change_back is None:
                print("\n‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏ô:")
                for coin, count in inserted_money.items():
                    print(f"  {coin} ‡∏ö‡∏≤‡∏ó x {count} ‡πÉ‡∏ö")
                    wallet[coin] -= count
                wallet = wallet_backup
                continue

           
            item['stock'] -= 1

         
            save_goods(goods, GOODS_FILES)
            save_wallet(wallet, WALLET_FILES)
            print("üíæ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå...")

            print("\n‚úÖ ‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            if change > 0:
                print(f"üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: {change} ‡∏ö‡∏≤‡∏ó")
                display_change(change_back)
                input("\nüéâ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏î‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠...")
            else:
                print("üí∞ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏û‡∏≠‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô")
                input("\nüéâ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏î‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠...")

        except ValueError:
            print("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
            


# ===================== MANAGE MENU ===================== #
def manage_menu(goods, wallet):
    pwd = input("\nüîí ‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£: ")
    if pwd != PASSWORD:
        print("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        return goods, wallet

    while True:
        print("\n" + "=" * 40)
        print("üîß ‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ï‡∏π‡πâ")
        print("=" * 40)
        print("g) ‡∏à‡∏±‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏π‡πâ")
        print("w) ‡∏à‡∏±‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏™‡πà‡∏ï‡∏π‡πâ")
        print("c) ‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å")
        print("=" * 40)

        choice = input("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (g/w/c): ").lower()

        if choice == "g":
            print("\nüì¶ ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 9 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)")
            for i in range(1, 10):
                name = input(f"‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà {i} ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î): ").strip()
                if not name:
                    break
                try:
                    price = int(input("‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ö‡∏≤‡∏ó): "))
                    stock = int(input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡∏ä‡∏¥‡πâ‡∏ô): "))
                    goods[i] = {'name': name, 'price': price, 'stock': stock}
                except ValueError:
                    print("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
            save_goods(goods, GOODS_FILES)
            print("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")

        elif choice == "w":
            print("\nüíµ ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç/‡∏ò‡∏ô‡∏ö‡∏±‡∏ï‡∏£‡πÉ‡∏ô‡∏ï‡∏π‡πâ")
            for n in [1, 2, 5, 10, 20, 50, 100, 200, 500, 1000]:
                try:
                    stock = int(input(f"{n} ‡∏ö‡∏≤‡∏ó: "))
                    wallet[n] = stock
                except ValueError:
                    print("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
            save_wallet(wallet, WALLET_FILES)
            print("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")

        elif choice == "c":
            print("‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å...\n")
            break

        else:
            print("‚ö†Ô∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")

    return goods, wallet


# ===================== SHUTDOWN ===================== #
def shutdown():
    pwd = input("\nüîí ‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö: ")
    if pwd == PASSWORD:
        confirm = input("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö? (y/n): ")
        if confirm.lower() == 'y':
            print("üõë ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
            exit(0)
        else:
            print("‚ùé ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö")
    else:
        print("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏¥‡∏î")


# ===================== MAIN MENU ===================== #
def main_menu():
    goods = load_goods(GOODS_FILES)
    wallet = load_wallet(WALLET_FILES)

    while True:
        print("\n" + "=" * 50)
        print("üìç ‡∏ï‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥".center(50))
        print("=" * 50)
        print("b) ‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
        print("m) ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ / ‡πÄ‡∏á‡∏¥‡∏ô")
        print("s) ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö")
        print("=" * 50)

        choice = input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (b/m/s): ").lower()

        if choice == "b":
            buy_goods(goods, wallet)
            

        elif choice == "m":
            goods, wallet = manage_menu(goods, wallet)

        elif choice == "s":
            shutdown()

        else:
            print("‚ö†Ô∏è ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")


# ===================== RUN ===================== #
if __name__ == "__main__":
    main_menu()
